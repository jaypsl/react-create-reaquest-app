{"ast":null,"code":"import Cookies from 'universal-cookie';\nimport { USER_LOGIN } from \"../actions/user\";\nimport { LOADING } from '../actions/loading';\nimport { GET_REQUESTS, DELETE_REQUEST, UPDATE_REQUEST } from '../actions/request';\nvar cookies = new Cookies();\nvar initAppState = {\n  user: cookies.get('user', {\n    path: '/'\n  }) || {},\n  requests: [],\n  loading_states: {}\n};\n\nfunction deepcopy(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nexport default function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initAppState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  state = deepcopy(state);\n\n  switch (action.type) {\n    case LOADING:\n      state.loading_states[action.target] = action.status;\n      return state;\n\n    case USER_LOGIN:\n      state.user = action.data;\n      return state;\n\n    case GET_REQUESTS:\n      state.requests = action.data;\n      return state;\n\n    case DELETE_REQUEST:\n      state.requests = state.requests.filter(function (r) {\n        return r.id !== action.data.id;\n      });\n      return state;\n\n    case UPDATE_REQUEST:\n      var index = state.requests.findIndex(function (r) {\n        return r.id === action.data.id;\n      });\n      state.requests[index] = action.data;\n      return state;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/jaysolanki/Assignments/react-assessment/src/redux/reducer/user.js"],"names":["Cookies","USER_LOGIN","LOADING","GET_REQUESTS","DELETE_REQUEST","UPDATE_REQUEST","cookies","initAppState","user","get","path","requests","loading_states","deepcopy","obj","JSON","parse","stringify","userReducer","state","action","type","target","status","data","filter","r","id","index","findIndex"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB;AAEA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,cAAvC,QAA6D,oBAA7D;AAEA,IAAMC,OAAO,GAAG,IAAIN,OAAJ,EAAhB;AAEA,IAAIO,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAEF,OAAO,CAACG,GAAR,CAAY,MAAZ,EAAoB;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAApB,KAAsC,EAD7B;AAEfC,EAAAA,QAAQ,EAAE,EAFK;AAGfC,EAAAA,cAAc,EAAE;AAHD,CAAnB;;AAMA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACnB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,GAAf,CAAX,CAAP;AACH;;AAED,eAAe,SAASI,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBZ,YAAsB;AAAA,MAARa,MAAQ;AAC9DD,EAAAA,KAAK,GAAGN,QAAQ,CAACM,KAAD,CAAhB;;AACA,UAAQC,MAAM,CAACC,IAAf;AACI,SAAKnB,OAAL;AACIiB,MAAAA,KAAK,CAACP,cAAN,CAAqBQ,MAAM,CAACE,MAA5B,IAAsCF,MAAM,CAACG,MAA7C;AACA,aAAOJ,KAAP;;AACJ,SAAKlB,UAAL;AACIkB,MAAAA,KAAK,CAACX,IAAN,GAAaY,MAAM,CAACI,IAApB;AACA,aAAOL,KAAP;;AAEJ,SAAKhB,YAAL;AACIgB,MAAAA,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACI,IAAxB;AACA,aAAOL,KAAP;;AACJ,SAAKf,cAAL;AACIe,MAAAA,KAAK,CAACR,QAAN,GAAiBQ,KAAK,CAACR,QAAN,CAAec,MAAf,CAAsB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,EAAF,KAASP,MAAM,CAACI,IAAP,CAAYG,EAAzB;AAAA,OAAvB,CAAjB;AACA,aAAOR,KAAP;;AACJ,SAAKd,cAAL;AACI,UAAIuB,KAAK,GAAGT,KAAK,CAACR,QAAN,CAAekB,SAAf,CAAyB,UAAAH,CAAC;AAAA,eAAIA,CAAC,CAACC,EAAF,KAASP,MAAM,CAACI,IAAP,CAAYG,EAAzB;AAAA,OAA1B,CAAZ;AACAR,MAAAA,KAAK,CAACR,QAAN,CAAeiB,KAAf,IAAwBR,MAAM,CAACI,IAA/B;AACA,aAAOL,KAAP;;AAEJ;AACI,aAAOA,KAAP;AApBR;AAsBH","sourcesContent":["import Cookies from 'universal-cookie';\n\nimport { USER_LOGIN } from \"../actions/user\";\nimport { LOADING } from '../actions/loading';\nimport { GET_REQUESTS, DELETE_REQUEST, UPDATE_REQUEST } from '../actions/request';\n\nconst cookies = new Cookies();\n\nvar initAppState = {\n    user: cookies.get('user', { path: '/' }) || {},\n    requests: [],\n    loading_states: {},\n};\n\nfunction deepcopy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n\nexport default function userReducer(state = initAppState, action) {\n    state = deepcopy(state);\n    switch (action.type) {\n        case LOADING:\n            state.loading_states[action.target] = action.status;\n            return state;\n        case USER_LOGIN:\n            state.user = action.data;\n            return state;\n\n        case GET_REQUESTS:\n            state.requests = action.data;\n            return state;\n        case DELETE_REQUEST:\n            state.requests = state.requests.filter(r => r.id !== action.data.id);\n            return state;\n        case UPDATE_REQUEST:\n            var index = state.requests.findIndex(r => r.id === action.data.id);\n            state.requests[index] = action.data;\n            return state;\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}