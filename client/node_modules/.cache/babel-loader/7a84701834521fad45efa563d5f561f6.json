{"ast":null,"code":"import Cookies from 'universal-cookie';\nimport { loading, LOADING_PENDING, LOADING_ERROR, LOADING_FINISHED } from './loading.js';\nvar cookies = new Cookies();\nexport var ERROR = \"ERROR\";\nexport var USER_LOGIN = \"USER_LOGIN\"; // export function updateState(form) {\n//     return function (dispatch) {\n//         dispatch({\n//             type: 'UPDATE_STATE',\n//             form\n//         })\n//         return Promise.resolve()\n//     }\n// }\n\nexport function login(form) {\n  return function (dispatch) {\n    // var promise = Promise();\n    // dispatch(loading('Login', LOADING_PENDING));\n    var promise = fetch('http://localhost:4000/authenticate', {\n      method: 'POST',\n      body: JSON.stringify(form),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (d) {\n      return d.json();\n    }).then(function (data) {\n      if (data.isLoggedIn) {\n        cookies.set('user', data, {\n          path: '/'\n        });\n        cookies.set('authorization', data.token, {\n          path: '/'\n        });\n        dispatch({\n          type: USER_LOGIN,\n          data: data\n        }); // dispatch(loading('Login', LOADING_FINISHED));\n        // dispatch(loading('Login', undefined));\n      } else {\n        throw data;\n      }\n    }).catch(function (err) {\n      console.log(err); // dispatch(loading('Login', LOADING_ERROR));\n    });\n    return promise;\n  };\n}\nexport function register(form) {\n  return function (dispatch) {\n    dispatch(loading('Register', LOADING_PENDING));\n    fetch('http://localhost:4000/register', {\n      method: 'POST',\n      body: JSON.stringify(form),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (d) {\n      return d.json();\n    }).then(function (data) {\n      if (data.isLoggedIn) {\n        cookies.set('user', data, {\n          path: '/'\n        });\n        cookies.set('authorization', data.token, {\n          path: '/'\n        });\n        dispatch({\n          type: USER_LOGIN,\n          data: data\n        });\n        dispatch(loading('Register', LOADING_FINISHED));\n        dispatch(loading('Register', undefined));\n      } else {\n        throw data;\n      }\n    }).catch(function (err) {\n      console.log(err);\n      dispatch(loading('Register', LOADING_ERROR));\n    });\n  };\n}\nexport function logout() {\n  // fetch('http://localhost:4000/logout', {\n  cookies.remove('user', {\n    path: '/'\n  });\n  cookies.remove('authorization', {\n    path: '/'\n  });\n  return {\n    type: USER_LOGIN,\n    data: {\n      isLoggedIn: false\n    }\n  };\n}","map":{"version":3,"sources":["/Users/jaysolanki/Assignments/react-assessment/src/redux/actions/user.js"],"names":["Cookies","loading","LOADING_PENDING","LOADING_ERROR","LOADING_FINISHED","cookies","ERROR","USER_LOGIN","login","form","dispatch","promise","fetch","method","body","JSON","stringify","headers","then","d","json","data","isLoggedIn","set","path","token","type","catch","err","console","log","register","undefined","logout","remove"],"mappings":"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","sourcesContent":["import Cookies from 'universal-cookie';\n\nimport { loading, LOADING_PENDING, LOADING_ERROR, LOADING_FINISHED } from './loading.js';\n\nconst cookies = new Cookies();\n\nexport const ERROR = \"ERROR\";\nexport const USER_LOGIN = \"USER_LOGIN\";\n\n// export function updateState(form) {\n//     return function (dispatch) {\n//         dispatch({\n//             type: 'UPDATE_STATE',\n//             form\n//         })\n//         return Promise.resolve()\n//     }\n// }\n\nexport function login(form) {\n    return (dispatch) => {\n        // var promise = Promise();\n        // dispatch(loading('Login', LOADING_PENDING));\n        var promise = fetch('http://localhost:4000/authenticate', {\n            method: 'POST',\n            body: JSON.stringify(form),\n            headers: { \"Content-Type\": \"application/json\" }\n        }).then(d => d.json()).then(data => {\n            if (data.isLoggedIn) {\n                cookies.set('user', data, { path: '/' });\n                cookies.set('authorization', data.token, { path: '/' });\n                dispatch({\n                    type: USER_LOGIN,\n                    data: data,\n                });\n                // dispatch(loading('Login', LOADING_FINISHED));\n                // dispatch(loading('Login', undefined));\n            } else {\n                throw (data);\n            }\n        }).catch(err => {\n            console.log(err);\n            // dispatch(loading('Login', LOADING_ERROR));\n        });\n        return promise;\n    };\n}\n\nexport function register(form) {\n    return (dispatch) => {\n        dispatch(loading('Register', LOADING_PENDING));\n        fetch('http://localhost:4000/register', {\n            method: 'POST',\n            body: JSON.stringify(form),\n            headers: { \"Content-Type\": \"application/json\" }\n        }).then(d => d.json()).then(data => {\n            if (data.isLoggedIn) {\n                cookies.set('user', data, { path: '/' });\n                cookies.set('authorization', data.token, { path: '/' });\n                dispatch({\n                    type: USER_LOGIN,\n                    data: data,\n                });\n                dispatch(loading('Register', LOADING_FINISHED));\n                dispatch(loading('Register', undefined));\n            } else {\n                throw (data);\n            }\n        }).catch(err => {\n            console.log(err);\n            dispatch(loading('Register', LOADING_ERROR));\n        });\n    }\n}\n\nexport function logout() {\n    // fetch('http://localhost:4000/logout', {\n    cookies.remove('user', { path: '/' });\n    cookies.remove('authorization', { path: '/' });\n    return {\n        type: USER_LOGIN,\n        data: {\n            isLoggedIn: false,\n        },\n    };\n}"]},"metadata":{},"sourceType":"module"}