{"ast":null,"code":"import { loading, LOADING_PENDING, LOADING_ERROR, LOADING_FINISHED } from './loading.js';\nexport var CREATE_REQUEST = \"CREATE_REQUEST\";\nexport var GET_REQUESTS = \"GET_REQUESTS\";\nexport var DELETE_REQUEST = \"DELETE_REQUEST\";\nexport var UPDATE_REQUEST = \"UPDATE_REQUEST\";\nexport function createRequest(form) {\n  return function (dispatch) {\n    dispatch(loading('CreateRequest', LOADING_PENDING));\n    fetch('http://localhost:4000/request', {\n      method: 'POST',\n      body: JSON.stringify(form),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include'\n    }).then(function (d) {\n      return d.json();\n    }).then(function (data) {\n      dispatch({\n        type: CREATE_REQUEST,\n        data: data\n      });\n      dispatch(loading('CreateRequest', LOADING_FINISHED));\n      dispatch(loading('CreateRequest', undefined));\n    }).catch(function (err) {\n      console.log(err);\n      dispatch(loading('CreateRequest', LOADING_ERROR));\n    });\n  };\n}\nexport function getList() {\n  return function (dispatch) {\n    fetch('http://localhost:4000/requests', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(function (d) {\n      return d.json();\n    }).then(function (requests) {\n      dispatch({\n        type: GET_REQUESTS,\n        data: requests\n      });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n}\nexport function patchRequest(form) {\n  return function (dispatch) {\n    fetch('http://localhost:4000/request/' + form.id, {\n      method: 'PATCH',\n      body: JSON.stringify(form),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include'\n    }).then(function (d) {\n      return d.json();\n    }).then(function (request) {\n      dispatch({\n        type: UPDATE_REQUEST,\n        data: request\n      });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n}\nexport function deleteRequest(form) {\n  return function (dispatch) {\n    fetch('http://localhost:4000/request/' + form.id, {\n      method: 'DELETE',\n      credentials: 'include'\n    }).then(function (d) {\n      return d.json();\n    }).then(function (request) {\n      dispatch({\n        type: DELETE_REQUEST,\n        data: request\n      });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n}","map":{"version":3,"sources":["/Users/jaysolanki/Assignments/react-assessment/src/redux/actions/request.js"],"names":["loading","LOADING_PENDING","LOADING_ERROR","LOADING_FINISHED","CREATE_REQUEST","GET_REQUESTS","DELETE_REQUEST","UPDATE_REQUEST","createRequest","form","dispatch","fetch","method","body","JSON","stringify","headers","credentials","then","d","json","data","type","undefined","catch","err","console","log","getList","requests","patchRequest","id","request","deleteRequest"],"mappings":"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","sourcesContent":["import { loading, LOADING_PENDING, LOADING_ERROR, LOADING_FINISHED } from './loading.js';\n\nexport const CREATE_REQUEST = \"CREATE_REQUEST\";\nexport const GET_REQUESTS = \"GET_REQUESTS\";\nexport const DELETE_REQUEST = \"DELETE_REQUEST\";\nexport const UPDATE_REQUEST = \"UPDATE_REQUEST\";\n\nexport function createRequest(form) {\n    return (dispatch) => {\n        dispatch(loading('CreateRequest', LOADING_PENDING));\n        fetch('http://localhost:4000/request', {\n            method: 'POST',\n            body: JSON.stringify(form),\n            headers: { \"Content-Type\": \"application/json\" },\n            credentials: 'include',\n        }).then(d => d.json()).then(data => {\n            dispatch({\n                type: CREATE_REQUEST,\n                data: data,\n            })\n            dispatch(loading('CreateRequest', LOADING_FINISHED));\n            dispatch(loading('CreateRequest', undefined));\n        }).catch(err => {\n            console.log(err);\n            dispatch(loading('CreateRequest', LOADING_ERROR));\n        })\n    };\n}\n\nexport function getList() {\n    return (dispatch) => {\n        fetch('http://localhost:4000/requests', {\n            method: 'GET',\n            credentials: 'include',\n        }).then(d => d.json()).then(requests => {\n            dispatch({\n                type: GET_REQUESTS,\n                data: requests,\n            });\n        }).catch(err => {\n            console.log(err);\n        })\n    };\n}\n\nexport function patchRequest(form) {\n    return (dispatch) => {\n        fetch('http://localhost:4000/request/' + form.id, {\n            method: 'PATCH',\n            body: JSON.stringify(form),\n            headers: { \"Content-Type\": \"application/json\" },\n            credentials: 'include',\n        }).then(d => d.json()).then(request => {\n            dispatch({\n                type: UPDATE_REQUEST,\n                data: request,\n            });\n        }).catch(err => {\n            console.log(err);\n        })\n    };\n}\n\nexport function deleteRequest(form) {\n    return (dispatch) => {\n        fetch('http://localhost:4000/request/' + form.id, {\n            method: 'DELETE',\n            credentials: 'include',\n        }).then(d => d.json()).then(request => {\n            dispatch({\n                type: DELETE_REQUEST,\n                data: request,\n            });\n        }).catch(err => {\n            console.log(err);\n        })\n    };\n}"]},"metadata":{},"sourceType":"module"}